<UserControl x:Class="GoogleCloudExtension.CloudExplorer.CloudExplorerToolWindowControl"


             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:utils="clr-namespace:GoogleCloudExtension.Utils;assembly=GoogleCloudExtension.Utils"
             xmlns:Models="clr-namespace:GoogleCloudExtension.GCloud.Models;assembly=GoogleCloudExtension.GCloud"
             xmlns:CloudExplorer="clr-namespace:GoogleCloudExtension.CloudExplorer"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0"
             xmlns:controls="clr-namespace:GoogleCloudExtension.Controls"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             d:DesignHeight="700" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance {x:Type CloudExplorer:CloudExplorerViewModel}}"
             Name="MyToolWindow">

    <UserControl.Resources>
        <utils:VisibilityConverter x:Key="iconVisibilityConverter" />
        <utils:VisibilityConverter x:Key="errorVisibilityConverter" />
        <utils:VisibilityConverter x:Key="progressVisibilityConverted" />
        <utils:VisibilityConverter x:Key="booleanPropertyConverter" />

        <!-- Data template to be applied to the TreeHierarchy -->
        <HierarchicalDataTemplate DataType="{x:Type CloudExplorer:TreeHierarchy}" ItemsSource="{Binding Children}">
            <Grid ContextMenu="{Binding ContextMenu}">
                <StackPanel Orientation="Horizontal">
                    <controls:ProgressIndicator Visibility="{Binding IsLoading, Converter={StaticResource progressVisibilityConverted}}" />
                    <Image Source="{x:Static CloudExplorer:TreeHierarchy.ErrorIcon}"
                           Height="16" Width="16"
                           VerticalAlignment="Center"
                           Visibility="{Binding IsError, Converter={StaticResource errorVisibilityConverter}}"
                           Margin="0,0,5,0"/>
                    <Image Source="{Binding Icon}"
                           Height="16" Width="16"
                           VerticalAlignment="Center"
                           Visibility="{Binding IconIsVisible, Converter={StaticResource iconVisibilityConverter}}"
                           Margin="0,0,5,0"/>
                    <ContentPresenter Content="{Binding Content}" VerticalAlignment="Center" />
                </StackPanel>
            </Grid>
        </HierarchicalDataTemplate>

        <!-- Data template to be applied to the TreeLeaf -->
        <DataTemplate DataType="{x:Type CloudExplorer:TreeLeaf}">
            <Grid ContextMenu="{Binding ContextMenu}">
                <StackPanel Orientation="Horizontal">
                    <controls:ProgressIndicator Visibility="{Binding IsLoading, Converter={StaticResource progressVisibilityConverted}}" />
                    <Image Source="{x:Static CloudExplorer:TreeHierarchy.ErrorIcon}"
                           Height="16" Width="16"
                           VerticalAlignment="Center"
                           Visibility="{Binding IsError, Converter={StaticResource errorVisibilityConverter}}"
                           Margin="0,0,5,0"/>
                    <Image Source="{Binding Icon}"
                           Height="16" Width="16"
                           Visibility="{Binding IconIsVisible, Converter={StaticResource iconVisibilityConverter}}"
                           VerticalAlignment="Center"
                           Margin="0,0,5,0"/>
                    <ContentPresenter Content="{Binding Content}" VerticalAlignment="Center" />
                </StackPanel>
            </Grid>
        </DataTemplate>

        <Style x:Key="CommandBarStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarGradientKey}}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="ErrorBarStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.InfoBackgroundKey}}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Brushes for the CommandBarButton cusotmization.-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="CommandBarButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarGradientKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarGradientKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Width" Value="25px" />
            <Setter Property="Height" Value="25px" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Image Source="{Binding}" Width="16px" Height="16px" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:PressButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarHoverOverSelectedIconKey}}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarHoverOverSelectedIconBorderKey}}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarSelectedBorderKey}}"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="3" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Error banner -->
        <StackPanel Visibility="{Binding ValidationErrorIsVisible, Converter={StaticResource booleanPropertyConverter}}"
                    Style="{StaticResource ErrorBarStyle}">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,0">
                <Hyperlink Command="{Binding ValidationErrorActionCommand}">
                    <TextBlock Text="{Binding ValidationErrorMessage}" />
                </Hyperlink>
            </TextBlock>
        </StackPanel>

        <!-- Action buttons. -->
        <ItemsControl ItemsSource="{Binding Buttons}"
                      Visibility="{Binding IsValidInstallation, Converter={StaticResource booleanPropertyConverter}}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Style="{StaticResource CommandBarStyle}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <controls:PressButton Content="{Binding Icon}"
                            Command="{Binding Command}"
                            VerticalAlignment="Center"
                            ToolTip="{Binding ToolTip}"
                            IsChecked="{Binding IsChecked}"
                            IsEnabled="{Binding IsEnabled}"
                            Style="{StaticResource CommandBarButtonStyle}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- Hierarchical view of the modules and versions within the modules. -->
        <TreeView
                  ItemsSource="{Binding Roots}" 
                  SelectedItemChanged="TreeView_SelectedItemChanged" 
                  Grid.Row="1">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

    </Grid>
</UserControl>
